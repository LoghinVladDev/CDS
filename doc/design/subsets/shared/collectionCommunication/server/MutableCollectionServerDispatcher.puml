@startuml

!includesub MutableCollectionServer.puml!public_declaration

!startsub public_declaration
!ifndef MUTABLE_COLLECTION_SERVER_DISPATCHER_PUBLIC
!define MUTABLE_COLLECTION_SERVER_DISPATCHER_PUBLIC

!includesub CollectionServerDispatcher.puml!public_declaration

namespace cds {
    namespace __hidden {
        namespace __impl {

            interface __MutableCollectionServer

            interface __MutableCollectionServerDispatcher <S, I, E, AIT, ACIT, IT, CIT, \nbegin(), end(),cbegin(), cend(), \nnew(), remove(), removeConst(), \nremoveArray(), removeConstArray()> extends __CollectionServerDispatcher {
                # {method} __begin () noexcept -> __AbstractDelegateIterator <E> *
                # {method} __end () noexcept -> __AbstractDelegateIterator <E> *
                # {method} __beginLocal () noexcept -> IT
                # {method} __endLocal () noexcept -> IT
                # {method} __remove (AIT const *) noexcept -> bool
                # {method} __removeArray (AIT const * const *, Size) noexcept -> Size
            }

            __MutableCollectionServerDispatcher "provides server-to-implementation handlers" .. cds.__hidden.__impl.__MutableCollectionServer

        }
    }
}

!endif
!endsub

@enduml