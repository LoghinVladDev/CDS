@startuml

!includesub ../primitive/DelegateForwardIterablePrimitiveClient.puml!public_declaration

!startsub public_declaration
!ifndef FIND_BY_PUBLIC
!define FIND_BY_PUBLIC

namespace cds {

    namespace __hidden {
        namespace __impl {

            interface __DelegateForwardIterablePrimitiveClient
            interface __LocalDelegateForwardIterablePrimitiveClient

            interface __FindByMutableCompositeClient <R, E, IT> {
                + {method} <C <...>, P> findThat (Size, C <IT> &, P const &) throws(except(P::operator()(E &)) -> C<IT> &
                + {method} <C <...>, P> findThat (Size, P const &) throws(except(P::operator()(E &)) -> C<IT>
                + {method} <P> findFirstThat (P const &) throws(except(P::operator()(E &)) -> IT
                + {method} <P> findLastThat (P const &) throws(except(P::operator()(E &)) -> IT
                + {method} <C <...>, P> findAllThat (C <IT> &, P const &) throws(except(P::operator()(E &)) -> C<IT> &
                + {method} <C <...>, P> findAllThat (P const &) throws(except(P::operator()(E &)) -> C<IT>
            }

            class __LocalFindByMutableCompositeClient <R, E, IT> << (T, #aa9999) >>
            __FindByMutableCompositeClient .. "is " __LocalFindByMutableCompositeClient
            __DelegateForwardIterablePrimitiveClient .. "uses" __FindByMutableCompositeClient
            __LocalDelegateForwardIterablePrimitiveClient ... "uses" __LocalFindByMutableCompositeClient

        }
    }
}

!endif
!endsub

@enduml