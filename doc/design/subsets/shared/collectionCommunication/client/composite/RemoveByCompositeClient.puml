@startuml

!includesub ../primitive/DelegateForwardConstIterablePrimitiveClient.puml!public_declaration
!includesub ../primitive/ConstIteratorRemovePrimitiveClient.puml!public_declaration

!startsub public_declaration
!ifndef REMOVE_BY_PUBLIC
!define REMOVE_BY_PUBLIC

namespace cds {

    namespace __hidden {
        namespace __impl {

            interface __DelegateForwardConstIterablePrimitiveClient
            interface __AbstractConstIteratorRemovePrimitiveClient
            interface __LocalDelegateForwardConstIterablePrimitiveClient
            interface __LocalConstIteratorRemovePrimitiveClient

            interface __RemoveByCompositeClient <R, E> {
                + {method} <P> removeThat (Size, P const &) throws(except(P::operator()(E const &))) -> Size
                + {method} <P> removeFirstThat (P const &) throws(except(P::operator()(E const &))) -> bool
                + {method} <P> removeLastThat (P const &) throws(except(P::operator()(E const &))) -> bool
                + {method} <P> removeAllThat (P const &) throws(except(P::operator()(E const &))) -> Size
            }

            class __LocalRemoveByCompositeClient <R, E> << (T, #aa9999) >>
            __RemoveByCompositeClient .. "is " __LocalRemoveByCompositeClient

            __DelegateForwardConstIterablePrimitiveClient .. "uses" __RemoveByCompositeClient
            __AbstractConstIteratorRemovePrimitiveClient "allows private access" .. "uses" __RemoveByCompositeClient

            __LocalDelegateForwardConstIterablePrimitiveClient ... "uses" __LocalRemoveByCompositeClient
            __LocalConstIteratorRemovePrimitiveClient "allows private access" .. "uses" __LocalRemoveByCompositeClient

        }
    }
}

!endif
!endsub

@enduml