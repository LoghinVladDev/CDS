@startuml

!includesub ../primitive/DelegateForwardConstIterablePrimitiveClient.puml!public_declaration

!startsub public_declaration
!ifndef INDICES_PUBLIC
!define INDICES_PUBLIC

namespace cds {

    namespace __hidden {
        namespace __impl {

            interface __DelegateForwardConstIterablePrimitiveClient
            interface __LocalDelegateForwardConstIterablePrimitiveClient

            interface __IndicesCompositeClient <R, E> {
                + {method} <C> indicesOf (Size, C &, E const &) const noexcept -> C &
                + {method} <C <...>> indicesOf (Size, E const &) const noexcept -> C <Index>
                + {method} firstIndexOf (E const &) const noexcept -> Index
                + {method} lastIndexOf (E const &) const noexcept -> Index
                + {method} <C> allIndicesOf (C &, E const &) const noexcept -> C &
                + {method} <C <...>> allIndicesOf (E const &) const noexcept -> C <Index>
            }

            class __LocalIndicesCompositeClient <R, E> << (T, #aa9999) >>
            __IndicesCompositeClient .. "is " __LocalIndicesCompositeClient
            __DelegateForwardConstIterablePrimitiveClient .. "uses" __IndicesCompositeClient
            __LocalDelegateForwardConstIterablePrimitiveClient ... "uses" __LocalIndicesCompositeClient

        }
    }
}

!endif
!endsub

@enduml