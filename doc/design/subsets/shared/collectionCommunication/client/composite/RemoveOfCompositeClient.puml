@startuml

!includesub ../primitive/DelegateForwardConstIterablePrimitiveClient.puml!public_declaration
!includesub ../primitive/ConstIteratorRemovePrimitiveClient.puml!public_declaration

!startsub public_declaration
!ifndef REMOVE_OF_PUBLIC
!define REMOVE_OF_PUBLIC

namespace cds {

    namespace __hidden {
        namespace __impl {

            interface __DelegateForwardConstIterablePrimitiveClient
            interface __AbstractConstIteratorRemovePrimitiveClient
            interface __LocalDelegateForwardConstIterablePrimitiveClient
            interface __LocalConstIteratorRemovePrimitiveClient

            interface __RemoveOfCompositeClient <R, E, I, BiPredicate <I, E>> {
                + {method} removeOf (Size, I const &) noexcept -> Size
                + {method} removeFirstOf (I const &) noexcept -> bool
                + {method} removeLastOf (I const &) noexcept -> bool
                + {method} removeAllOf (I const &) noexcept -> Size

                + {method} removeNotOf (Size, I const &) noexcept -> Size
                + {method} removeFirstNotOf (I const &) noexcept -> bool
                + {method} removeLastNotOf (I const &) noexcept -> bool
                + {method} removeAllNotOf (I const &) noexcept -> Size
            }

            class __LocalRemoveOfCompositeClient <R, E, I, BiPredicate <I, E>> << (T, #aa9999) >>
            __RemoveOfCompositeClient .. "is " __LocalRemoveOfCompositeClient

            __DelegateForwardConstIterablePrimitiveClient .. "uses" __RemoveOfCompositeClient
            __AbstractConstIteratorRemovePrimitiveClient "allows private access" .. "uses" __RemoveOfCompositeClient

            __LocalDelegateForwardConstIterablePrimitiveClient ... "uses" __LocalRemoveOfCompositeClient
            __LocalConstIteratorRemovePrimitiveClient "allows private access" .. "uses" __LocalRemoveOfCompositeClient

        }
    }
}

!endif
!endsub

@enduml