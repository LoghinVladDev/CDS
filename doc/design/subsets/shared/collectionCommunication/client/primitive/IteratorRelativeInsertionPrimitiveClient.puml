@startuml

!includesub ../../channel/Channel.puml!public_declaration

!startsub public_declaration
!ifndef RELATIVE_INSERTION_PUBLIC
!define RELATIVE_INSERTION_PUBLIC

namespace cds {
    namespace __hidden {
        namespace __impl {

            interface __AbstractIteratorRelativeInsertionPrimitiveClient <R, E> {
                + {method} insertBefore (AbstractIterator const &, E const &) throws except(E(E const &)) -> bool
                + {method} insertBefore (AbstractIterator const &, E &&) throws except(E(E &&)) -> bool
                + {method} insertAfter (AbstractIterator const &, E const &) throws except(E(E const &)) -> bool
                + {method} insertAfter (AbstractIterator const &, E &&) throws except(E(E &&)) -> bool
                + {method} <__Args ...> emplaceBefore (AbstractIterator const &, __Args && ...) throws except(E(__Args && ...)) -> bool
                + {method} <__Args ...> emplaceAfter (AbstractIterator const &, __Args && ...) throws except(E(__Args && ...)) -> bool
                + {method} <__Args ...> insertAllBefore (AbstractIterator const &, __Args && ...) throws except(E(AnyTypeOf(__Args ...))) -> bool
                + {method} <__Args ...> insertAllAfter (AbstractIterator const &, __Args && ...) throws except(E(AnyTypeOf(__Args ...))) -> bool
                + {method} <__Iterable> insertAllOfBefore (AbstractIterator const &, __Iterable const &) throws except(E(ReturnOf(__Iterable::begin()) const &)) -> bool
                + {method} <__Iterable> insertAllOfAfter (AbstractIterator const &, __Iterable const &) throws except(E(ReturnOf(__Iterable::begin()) const &)) -> bool
                + {method} insertAllOfBefore (AbstractIterator const &, std::initializer_list <E>) throws except(E(E const &)) -> bool
                + {method} insertAllOfAfter (AbstractIterator const &, std::initializer_list <E>) throws except(E(E const &)) -> bool
                + {method} <__Iterator> insertAllOfBefore (AbstractIterator const &, __Iterator const &, __Iterator const &, [Size]) throws except(E(ReturnOf(__Iterator::operator *()) const &)) -> bool
                + {method} <__Iterator> insertAllOfAfter (AbstractIterator const &, __Iterator const &, __Iterator const &, [Size]) throws except(E(ReturnOf(__Iterator::operator *()) const &)) -> bool
            }

            interface __LocalIteratorRelativeInsertionPrimitiveClient <R, E, I> {
                + {method} insertBefore (I const &, E const &) throws except(E(E const &)) -> bool
                + {method} insertBefore (I const &, E &&) throws except(E(E &&)) -> bool
                + {method} insertAfter (I const &, E const &) throws except(E(E const &)) -> bool
                + {method} insertAfter (I const &, E &&) throws except(E(E &&)) -> bool
                + {method} <__Args ...> emplaceBefore (I const &, __Args && ...) throws except(E(__Args && ...)) -> bool
                + {method} <__Args ...> emplaceAfter (I const &, __Args && ...) throws except(E(__Args && ...)) -> bool
                + {method} <__Args ...> insertAllBefore (I const &, __Args && ...) throws except(E(AnyTypeOf(__Args ...))) -> bool
                + {method} <__Args ...> insertAllAfter (I const &, __Args && ...) throws except(E(AnyTypeOf(__Args ...))) -> bool
                + {method} <__Iterable> insertAllOfBefore (I const &, __Iterable const &) throws except(E(ReturnOf(__Iterable::begin()) const &)) -> bool
                + {method} <__Iterable> insertAllOfAfter (I const &, __Iterable const &) throws except(E(ReturnOf(__Iterable::begin()) const &)) -> bool
                + {method} insertAllOfBefore (I const &, std::initializer_list <E>) throws except(E(E const &)) -> bool
                + {method} insertAllOfAfter (I const &, std::initializer_list <E>) throws except(E(E const &)) -> bool
                + {method} <__Iterator> insertAllOfBefore (I const &, __Iterator const &, __Iterator const &, [Size]) throws except(E(ReturnOf(__Iterator::operator *()) const &)) -> bool
                + {method} <__Iterator> insertAllOfAfter (I const &, __Iterator const &, __Iterator const &, [Size]) throws except(E(ReturnOf(__Iterator::operator *()) const &)) -> bool
            }

            note "Requests direct dispatcher-standard calls" as LIRTIPCLocalHint
            note "Requests handlers to call through Channel" as AIRTIPCHint
            LIRTIPCLocalHint - __LocalIteratorRelativeInsertionPrimitiveClient
            AIRTIPCHint - __AbstractIteratorRelativeInsertionPrimitiveClient

        }
    }
}

!endif
!endsub

@enduml