@startuml

!includesub AbstractDelegateWrapperIterator.puml!public_declaration
!includesub ../iterator/IteratorModel.puml!public_declaration

!startsub public_declaration
!ifndef FW_DEL_WR_IT_PUBLIC
!define FW_DEL_WR_IT_PUBLIC

namespace cds {

    namespace __hidden {
        namespace __impl {

            class __ForwardDelegateWrapperIterator <E> extends __AbstractDelegateWrapperIterator implements cds.meta.ForwardIterator {
                + {method} __ForwardDelegateWrapperIterator () noexcept
                + {method} __ForwardDelegateWrapperIterator (cds::Object const &, __AbstractDelegateIterator <E> *) noexcept
                + {method} __ForwardDelegateWrapperIterator (__ForwardDelegateWrapperIterator const &) noexcept
                + {method} __ForwardDelegateWrapperIterator (__ForwardDelegateWrapperIterator &&) noexcept
                + {method} ~__ForwardDelegateWrapperIterator () noexcept
                + {method} operator = (__ForwardDelegateWrapperIterator const &) noexcept -> __ForwardDelegateWrapperIterator &
                + {method} operator = (__ForwardDelegateWrapperIterator &&) noexcept -> __ForwardDelegateWrapperIterator &

                + {method} operator == (__ForwardDelegateWrapperIterator const &) const noexcept -> bool
                + {method} operator != (__ForwardDelegateWrapperIterator const &) const noexcept -> bool
                + {method} operator ++ () noexcept -> __ForwardDelegateWrapperIterator &
            }

        }
    }
}

!endif
!endsub

@enduml