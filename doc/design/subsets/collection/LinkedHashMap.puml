@startuml

!includesub Map.puml!public_declaration

!includesub ../shared/collectionCommunication/client/primitive/DelegateForwardIterablePrimitiveClient.puml!public_declaration
!includesub ../shared/collectionCommunication/client/primitive/DelegateForwardConstIterablePrimitiveClient.puml!public_declaration
!includesub ../shared/collectionCommunication/client/primitive/IteratorRemovePrimitiveClient.puml!public_declaration
!includesub ../shared/collectionCommunication/client/primitive/ConstIteratorRemovePrimitiveClient.puml!public_declaration
!includesub ../shared/collectionCommunication/client/primitive/RandomInsertionPrimitiveClient.puml!public_declaration
!includesub ../shared/collectionCommunication/client/primitive/FindUniqueMutablePrimitiveClient.puml!public_declaration
!includesub ../shared/collectionCommunication/client/primitive/FindUniqueImmutablePrimitiveClient.puml!public_declaration

!includesub ../shared/collectionCommunication/client/composite/ContainsOfCompositeClient.puml!public_declaration
!includesub ../shared/collectionCommunication/client/composite/GenericMutableStatementsCompositeClient.puml!public_declaration
!includesub ../shared/collectionCommunication/client/composite/GenericImmutableStatementsCompositeClient.puml!public_declaration
!includesub ../shared/collectionCommunication/client/composite/FindOfImmutableCompositeClient.puml!public_declaration
!includesub ../shared/collectionCommunication/client/composite/FindOfMutableCompositeClient.puml!public_declaration
!includesub ../shared/collectionCommunication/client/composite/FindByImmutableCompositeClient.puml!public_declaration
!includesub ../shared/collectionCommunication/client/composite/FindByMutableCompositeClient.puml!public_declaration
!includesub ../shared/collectionCommunication/client/composite/RemoveByCompositeClient.puml!public_declaration
!includesub ../shared/collectionCommunication/client/composite/RemoveOfCompositeClient.puml!public_declaration

!includesub ../shared/collectionCommunication/server/MapServer.puml!public_declaration
!includesub ../shared/collectionCommunication/server/SetServer.puml!public_declaration
!includesub ../shared/collectionCommunication/server/MutableCollectionServer.puml!public_declaration
!includesub ../shared/collectionCommunication/server/MapServerDispatcher.puml!public_declaration
!includesub ../shared/collectionImplementation/HashTable.puml!public_declaration

!startsub public_declaration
!ifndef LHASH_MAP_PUBLIC
!define LHASH_MAP_PUBLIC

namespace cds {

    namespace __hidden {
        namespace __impl {

            class __HashTable
            class __SingleLinkedList
            interface __MapServer
            interface __LocalRandomInsertionPrimitiveClient
            interface __LocalIteratorRelativeInsertionPrimitiveClient
            interface __LocalConstIteratorRelativeInsertionPrimitiveClient
            interface __LocalFindOfMutableCompositeClient
            interface __LocalFindOfImmutableCompositeClient
            interface __LocalFindByMutableCompositeClient
            interface __LocalFindByImmutableCompositeClient
            interface __LocalIteratorRemovePrimitiveClient
            interface __LocalConstIteratorRemovePrimitiveClient
            interface __LocalRemoveOfCompositeClient
            interface __LocalRemoveByCompositeClient
            interface __LocalGenericMutableStatementsCompositeClient
            interface __LocalGenericImmutableStatementsCompositeClient
            interface __LocalContainsOfCompositeClient
            interface __LocalDelegateForwardIterablePrimitiveClient
            interface __LocalDelegateForwardConstIterablePrimitiveClient
            interface __LocalFindUniqueImmutablePrimitiveClient
            interface __LocalFindUniqueMutablePrimitiveClient

            class __LinkedHashMapHashTableImplementation <E> << (T, #aa9999) >>
            class __LinkedHashMapLinkedListImplementation <E> << (T, #aa9999) >>
            class __LinkedHashMapServer <E> << (T, #aa9999) >>
            class __LinkedHashMapRandomInsertionClient <E> << (T, #aa9999) >>
            class __LinkedHashMapIteratorRelativeInsertionClient <E> << (T, #aa9999) >>
            class __LinkedHashMapConstIteratorRelativeInsertionClient <E> << (T, #aa9999) >>
            class __LinkedHashMapFindOfCollectionClient <E> << (T, #aa9999) >>
            class __LinkedHashMapFindOfInitializerListClient <E> << (T, #aa9999) >>
            class __LinkedHashMapFindConstOfCollectionClient <E> << (T, #aa9999) >>
            class __LinkedHashMapFindConstOfInitializerListClient <E> << (T, #aa9999) >>
            class __LinkedHashMapFindByClient <E> << (T, #aa9999) >>
            class __LinkedHashMapFindConstByClient <E> << (T, #aa9999) >>
            class __LinkedHashMapIteratorRemoveClient <E> << (T, #aa9999) >>
            class __LinkedHashMapConstIteratorRemoveClient <E> << (T, #aa9999) >>
            class __LinkedHashMapRemoveOfCollectionClient <E> << (T, #aa9999) >>
            class __LinkedHashMapRemoveOfInitializerListClient <E> << (T, #aa9999) >>
            class __LinkedHashMapRemoveByClient <E> << (T, #aa9999) >>
            class __LinkedHashMapGenericStatementsClient <E> << (T, #aa9999) >>
            class __LinkedHashMapGenericConstStatementsClient <E> << (T, #aa9999) >>
            class __LinkedHashMapContainsOfCollectionClient <E> << (T, #aa9999) >>
            class __LinkedHashMapContainsOfInitializerListClient <E> << (T, #aa9999) >>
            class __LinkedHashMapDelegateForwardIterableClient <E> << (T, #aa9999) >>
            class __LinkedHashMapDelegateForwardConstIterableClient <E> << (T, #aa9999) >>
            class __LinkedHashMapFindUniqueClient <E> << (T, #aa9999) >>
            class __LinkedHashMapFindUniqueConstClient <E> << (T, #aa9999) >>

            __HashTable "is"    .......                                                __LinkedHashMapHashTableImplementation
            __SingleLinkedList "is"    .......                                                __LinkedHashMapLinkedListImplementation
            __MapServer "is"   ........                                                __LinkedHashMapServer
            __LocalRandomInsertionPrimitiveClient "is"  .......                        __LinkedHashMapRandomInsertionClient
            __LocalIteratorRelativeInsertionPrimitiveClient "is"    .......            __LinkedHashMapIteratorRelativeInsertionClient
            __LocalConstIteratorRelativeInsertionPrimitiveClient "is"   .......        __LinkedHashMapConstIteratorRelativeInsertionClient
            __LocalFindOfMutableCompositeClient "is"    .......                        __LinkedHashMapFindOfCollectionClient
            __LocalFindOfMutableCompositeClient "is"    .......                        __LinkedHashMapFindOfInitializerListClient
            __LocalFindOfImmutableCompositeClient "is"  .......                        __LinkedHashMapFindConstOfCollectionClient
            __LocalFindOfImmutableCompositeClient "is"  ....                        __LinkedHashMapFindConstOfInitializerListClient
            __LocalFindByMutableCompositeClient "is"    ......                        __LinkedHashMapFindByClient
            __LocalFindByImmutableCompositeClient "is"  ....                        __LinkedHashMapFindConstByClient
            __LocalIteratorRemovePrimitiveClient "is"   ........                        __LinkedHashMapIteratorRemoveClient
            __LocalConstIteratorRemovePrimitiveClient "is"  ...                    __LinkedHashMapConstIteratorRemoveClient
            __LocalRemoveOfCompositeClient "is" ...                                __LinkedHashMapRemoveOfCollectionClient
            __LocalRemoveOfCompositeClient "is" ....                                __LinkedHashMapRemoveOfInitializerListClient
            __LocalRemoveByCompositeClient "is" ...                                __LinkedHashMapRemoveByClient

            __LocalGenericMutableStatementsCompositeClient "is" ...                __LinkedHashMapGenericStatementsClient
            __LocalGenericImmutableStatementsCompositeClient "is"   ....            __LinkedHashMapGenericConstStatementsClient
            __LocalContainsOfCompositeClient "is"   ...                            __LinkedHashMapContainsOfCollectionClient
            __LocalContainsOfCompositeClient "is"   ....                            __LinkedHashMapContainsOfInitializerListClient
            __LocalDelegateForwardIterablePrimitiveClient "is"  ....                __LinkedHashMapDelegateForwardIterableClient
            __LocalDelegateForwardConstIterablePrimitiveClient "is" ....            __LinkedHashMapDelegateForwardConstIterableClient
            __LocalFindUniqueImmutablePrimitiveClient "is" .....            __LinkedHashMapFindUniqueConstClient
            __LocalFindUniqueMutablePrimitiveClient "is" .....            __LinkedHashMapFindUniqueClient

        }
    }

    abstract class Map <K, V>
    class LinkedHashMap <K, V, [H]> extends cds.__hidden.__impl.__LinkedHashMapHashTableImplementation, cds.__hidden.__impl.__LinkedHashMapLinkedListImplementation implements cds.__hidden.__impl.__LinkedHashMapDispatcher, cds.__hidden.__impl.__LinkedHashMapServer, cds.__hidden.__impl.__LinkedHashMapRandomInsertionClient, cds.__hidden.__impl.__LinkedHashMapIteratorRelativeInsertionClient, cds.__hidden.__impl.__LinkedHashMapConstIteratorRelativeInsertionClient, cds.__hidden.__impl.__LinkedHashMapFindOfCollectionClient, cds.__hidden.__impl.__LinkedHashMapFindOfInitializerListClient, cds.__hidden.__impl.__LinkedHashMapFindConstOfCollectionClient, cds.__hidden.__impl.__LinkedHashMapFindConstOfInitializerListClient, cds.__hidden.__impl.__LinkedHashMapFindByClient, cds.__hidden.__impl.__LinkedHashMapFindConstByClient, cds.__hidden.__impl.__LinkedHashMapIteratorRemoveClient, cds.__hidden.__impl.__LinkedHashMapConstIteratorRemoveClient, cds.__hidden.__impl.__LinkedHashMapRemoveOfCollectionClient, cds.__hidden.__impl.__LinkedHashMapRemoveOfInitializerListClient, cds.__hidden.__impl.__LinkedHashMapRemoveByClient, cds.__hidden.__impl.__LinkedHashMapGenericStatementsClient, cds.__hidden.__impl.__LinkedHashMapGenericConstStatementsClient, cds.__hidden.__impl.__LinkedHashMapContainsOfCollectionClient, cds.__hidden.__impl.__LinkedHashMapContainsOfInitializerListClient, cds.__hidden.__impl.__LinkedHashMapDelegateForwardIterableClient, cds.__hidden.__impl.__LinkedHashMapDelegateForwardConstIterableClient, cds.__hidden.__impl.__LinkedHashMapFindUniqueClient, cds.__hidden.__impl.__LinkedHashMapFindUniqueConstClient  {
        ..base methods..
        + {method} LinkedHashMap () noexcept
        + {method} LinkedHashMap (LinkedHashMap const &) noexcept
        + {method} LinkedHashMap (LinkedHashMap &&) noexcept
        + {method} LinkedHashMap (H const &) noexcept
        + {method} <IT> LinkedHashMap (IT const &, IT const &, [Size]) noexcept
        + {method} <IT> LinkedHashMap (H const &, IT const &, IT const &, [Size]) noexcept
        + {method} LinkedHashMap (std::initializer_list <MapEntry <K, V>> const &) noexcept
        + {method} LinkedHashMap (H const &, std::initializer_list <MapEntry <K, V>> const &) noexcept
        + {method} < I> LinkedHashMap (I const &) noexcept
        + {method} < I> LinkedHashMap (H const &, I const &) noexcept
        + {method} ~LinkedHashMap () noexcept
        + {method} operator = (LinkedHashMap const &) noexcept -> LinkedHashMap &
        + {method} operator = (LinkedHashMap &&) noexcept -> LinkedHashMap &
        + {method} operator = (std::initializer_list <MapEntry <K, V>> const &) noexcept -> LinkedHashMap &
        + {method} < I> operator = (I const &) noexcept -> LinkedHashMap &
        - {method} entryAt (K const &, bool *) noexcept -> MapEntry <K, V> *
        - {method} entryAt (K const &) const noexcept -> MapEntry <K, V> const *
        ..public methods..
        + {method} operator == (LinkedHashMap const &) const noexcept -> bool
        + {method} operator != (LinkedHashMap const &) const noexcept -> bool
        + {method} sequence () noexcept -> Sequence <LinkedHashMap <K, V, H>>
        + {method} sequence () const noexcept -> Sequence <LinkedHashMap <K, V, H> const>
        + {method} keys () const noexcept -> KeySetProxy const &
        + {method} keys () noexcept -> KeySetProxy &
        + {method} values () const noexcept -> ValueMutableCollectionProxy const &
        + {method} values () noexcept -> ValueMutableCollectionProxy &
        + {method} entries () const noexcept -> EntryMutableCollectionProxy const &
        + {method} entries () noexcept -> EntryMutableCollectionProxy &
    }

    Map ---|> LinkedHashMap

    namespace __hidden {
        namespace __impl {

            interface __SetServer
            class __LinkedHashMapKeyProxyServer <E> << (T, #aa9999) >>
            class __LinkedHashMapKeyProxyRandomInsertionClient <E> << (T, #aa9999) >>
            class __LinkedHashMapKeyProxyIteratorRemoveClient <E> << (T, #aa9999) >>
            class __LinkedHashMapKeyProxyFindOfCollectionClient <E> << (T, #aa9999) >>
            class __LinkedHashMapKeyProxyFindOfInitializerListClient <E> << (T, #aa9999) >>
            class __LinkedHashMapKeyProxyFindByClient <E> << (T, #aa9999) >>
            class __LinkedHashMapKeyProxyRemoveOfCollectionClient <E> << (T, #aa9999) >>
            class __LinkedHashMapKeyProxyRemoveOfInitializerListClient <E> << (T, #aa9999) >>
            class __LinkedHashMapKeyProxyRemoveByClient <E> << (T, #aa9999) >>
            class __LinkedHashMapKeyProxyGenericStatementsClient <E> << (T, #aa9999) >>
            class __LinkedHashMapKeyProxyFindUniqueClient <E> << (T, #aa9999) >>
            class __LinkedHashMapKeyProxyContainsOfCollectionClient <E> << (T, #aa9999) >>
            class __LinkedHashMapKeyProxyContainsOfInitializerListClient <E> << (T, #aa9999) >>
            class __LinkedHashMapKeyProxyDelegateForwardConstIterableClient <E> << (T, #aa9999) >>

            __SetServer ...... "is" __LinkedHashMapKeyProxyServer
            __LocalRandomInsertionPrimitiveClient ...... "is" __LinkedHashMapKeyProxyRandomInsertionClient
            __LocalConstIteratorRemovePrimitiveClient ...... "is" __LinkedHashMapKeyProxyIteratorRemoveClient
            __LocalFindOfImmutableCompositeClient ...... "is" __LinkedHashMapKeyProxyFindOfCollectionClient
            __LocalFindOfImmutableCompositeClient ...... "is" __LinkedHashMapKeyProxyFindOfInitializerListClient
            __LocalFindByImmutableCompositeClient ...... "is" __LinkedHashMapKeyProxyFindByClient
            __LocalRemoveOfCompositeClient ...... "is" __LinkedHashMapKeyProxyRemoveOfCollectionClient
            __LocalRemoveOfCompositeClient ...... "is" __LinkedHashMapKeyProxyRemoveOfInitializerListClient
            __LocalRemoveByCompositeClient ...... "is" __LinkedHashMapKeyProxyRemoveByClient
            __LocalGenericImmutableStatementsCompositeClient ...... "is" __LinkedHashMapKeyProxyGenericStatementsClient
            __LocalFindUniqueImmutablePrimitiveClient ...... "is" __LinkedHashMapKeyProxyFindUniqueClient
            __LocalContainsOfCompositeClient ...... "is" __LinkedHashMapKeyProxyContainsOfCollectionClient
            __LocalContainsOfCompositeClient ... "is" __LinkedHashMapKeyProxyContainsOfInitializerListClient
            __LocalDelegateForwardConstIterablePrimitiveClient ...... "is" __LinkedHashMapKeyProxyDelegateForwardConstIterableClient

        }
    }


    class LinkedHashMap::KeySetProxy extends Map::AbstractKeySetProxy implements cds.__hidden.__impl.__LinkedHashMapKeyProxyRandomInsertionClient, cds.__hidden.__impl.__LinkedHashMapKeyProxyIteratorRemoveClient, cds.__hidden.__impl.__LinkedHashMapKeyProxyFindOfCollectionClient, cds.__hidden.__impl.__LinkedHashMapKeyProxyFindOfInitializerListClient, cds.__hidden.__impl.__LinkedHashMapKeyProxyFindByClient, cds.__hidden.__impl.__LinkedHashMapKeyProxyRemoveOfCollectionClient, cds.__hidden.__impl.__LinkedHashMapKeyProxyRemoveOfInitializerListClient, cds.__hidden.__impl.__LinkedHashMapKeyProxyRemoveByClient, cds.__hidden.__impl.__LinkedHashMapKeyProxyGenericStatementsClient, cds.__hidden.__impl.__LinkedHashMapKeyProxyFindUniqueClient, cds.__hidden.__impl.__LinkedHashMapKeyProxyContainsOfCollectionClient, cds.__hidden.__impl.__LinkedHashMapKeyProxyContainsOfInitializerListClient, cds.__hidden.__impl.__LinkedHashMapKeyProxyDelegateForwardConstIterableClient {
        ..base methods..
        # {method} KeySetProxy (LinkedHashMap *) noexcept
        + {method} ~KeySetProxy () noexcept
        ..required by local clients, manual dispatcher..
        - {method} __cbegin () const noexcept -> cds::__hidden::__impl::__AbstractDelegateIterator <K const> *
        - {method} __cend () const noexcept -> cds::__hidden::__impl::__AbstractDelegateIterator <K const> *
        - {method} __cbeginLocal () const noexcept -> ConstIterator
        - {method} __cendLocal () const noexcept -> ConstIterator
        - {method} __removeConst (ConstIterator const *) noexcept -> bool
        - {method} __removeConstArray (ConstIterator const * const *, Size) noexcept -> Size
        - {method} __findConst (K const &) const noexcept -> cds::__hidden::__impl::__AbstractDelegateIterator <K const> *
        - {method} __findConstLocal (K const &) const noexcept -> ConstIterator
        ..other methods..
        - {method} __equals (KeySetProxy const &) const noexcept -> bool
        + {method} operator == (KeySetProxy const &) const noexcept -> bool
        + {method} operator != (KeySetProxy const &) const noexcept -> bool
    }

    LinkedHashMap .. "is nested in" LinkedHashMap::KeySetProxy

    namespace __hidden {
        namespace __impl {

            interface __MutableCollectionServer
            class __LinkedHashMapValueProxyServer <E> << (T, #aa9999) >>
            class __LinkedHashMapValueProxyRandomInsertionClient <E> << (T, #aa9999) >>
            class __LinkedHashMapValueProxyIteratorRemoveClient <E> << (T, #aa9999) >>
            class __LinkedHashMapValueProxyConstIteratorRemoveClient <E> << (T, #aa9999) >>
            class __LinkedHashMapValueProxyFindOfCollectionClient <E> << (T, #aa9999) >>
            class __LinkedHashMapValueProxyFindOfConstCollectionClient <E> << (T, #aa9999) >>
            class __LinkedHashMapValueProxyFindOfInitializerListClient <E> << (T, #aa9999) >>
            class __LinkedHashMapValueProxyFindOfConstInitializerListClient <E> << (T, #aa9999) >>
            class __LinkedHashMapValueProxyFindByClient <E> << (T, #aa9999) >>
            class __LinkedHashMapValueProxyConstFindByClient <E> << (T, #aa9999) >>
            class __LinkedHashMapValueProxyRemoveOfCollectionClient <E> << (T, #aa9999) >>
            class __LinkedHashMapValueProxyRemoveOfInitializerListClient <E> << (T, #aa9999) >>
            class __LinkedHashMapValueProxyRemoveByClient <E> << (T, #aa9999) >>
            class __LinkedHashMapValueProxyGenericStatementsClient <E> << (T, #aa9999) >>
            class __LinkedHashMapValueProxyConstGenericStatementsClient <E> << (T, #aa9999) >>
            class __LinkedHashMapValueProxyContainsOfCollectionClient <E> << (T, #aa9999) >>
            class __LinkedHashMapValueProxyContainsOfInitializerListClient <E> << (T, #aa9999) >>
            class __LinkedHashMapValueProxyDelegateForwardIterableClient <E> << (T, #aa9999) >>
            class __LinkedHashMapValueProxyDelegateForwardConstIterableClient <E> << (T, #aa9999) >>

            __MutableCollectionServer ........ "is" __LinkedHashMapValueProxyServer
            __LocalRandomInsertionPrimitiveClient ........ "is" __LinkedHashMapValueProxyRandomInsertionClient
            __LocalIteratorRemovePrimitiveClient ........ "is" __LinkedHashMapValueProxyIteratorRemoveClient
            __LocalConstIteratorRemovePrimitiveClient ...... "is" __LinkedHashMapValueProxyConstIteratorRemoveClient
            __LocalFindOfMutableCompositeClient ........ "is" __LinkedHashMapValueProxyFindOfCollectionClient
            __LocalFindOfMutableCompositeClient ........ "is" __LinkedHashMapValueProxyFindOfInitializerListClient
            __LocalFindByMutableCompositeClient ........ "is" __LinkedHashMapValueProxyFindByClient
            __LocalFindOfImmutableCompositeClient ... "is" __LinkedHashMapValueProxyFindOfConstCollectionClient
            __LocalFindOfImmutableCompositeClient ... "is" __LinkedHashMapValueProxyFindOfConstInitializerListClient
            __LocalFindByImmutableCompositeClient ..... "is" __LinkedHashMapValueProxyConstFindByClient
            __LocalRemoveOfCompositeClient ........ "is" __LinkedHashMapValueProxyRemoveOfCollectionClient
            __LocalRemoveOfCompositeClient ...... "is" __LinkedHashMapValueProxyRemoveOfInitializerListClient
            __LocalRemoveByCompositeClient ........ "is" __LinkedHashMapValueProxyRemoveByClient
            __LocalGenericMutableStatementsCompositeClient ........ "is" __LinkedHashMapValueProxyGenericStatementsClient
            __LocalGenericImmutableStatementsCompositeClient ........ "is" __LinkedHashMapValueProxyConstGenericStatementsClient
            __LocalContainsOfCompositeClient ........ "is" __LinkedHashMapValueProxyContainsOfCollectionClient
            __LocalContainsOfCompositeClient ........ "is" __LinkedHashMapValueProxyContainsOfInitializerListClient
            __LocalDelegateForwardIterablePrimitiveClient ........ "is" __LinkedHashMapValueProxyDelegateForwardIterableClient
            __LocalDelegateForwardConstIterablePrimitiveClient ........ "is" __LinkedHashMapValueProxyDelegateForwardConstIterableClient

        }
    }

    class LinkedHashMap::ValueMutableCollectionProxy extends Map::AbstractValueMutableCollectionProxy implements cds.__hidden.__impl.__LinkedHashMapValueProxyServer, cds.__hidden.__impl.__LinkedHashMapValueProxyRandomInsertionClient, cds.__hidden.__impl.__LinkedHashMapValueProxyIteratorRemoveClient, cds.__hidden.__impl.__LinkedHashMapValueProxyConstIteratorRemoveClient, cds.__hidden.__impl.__LinkedHashMapValueProxyFindOfCollectionClient, cds.__hidden.__impl.__LinkedHashMapValueProxyFindOfInitializerListClient, cds.__hidden.__impl.__LinkedHashMapValueProxyFindByClient, cds.__hidden.__impl.__LinkedHashMapValueProxyFindOfConstCollectionClient, cds.__hidden.__impl.__LinkedHashMapValueProxyFindOfConstInitializerListClient, cds.__hidden.__impl.__LinkedHashMapValueProxyConstFindByClient, cds.__hidden.__impl.__LinkedHashMapValueProxyRemoveOfCollectionClient, cds.__hidden.__impl.__LinkedHashMapValueProxyRemoveOfInitializerListClient, cds.__hidden.__impl.__LinkedHashMapValueProxyRemoveByClient, cds.__hidden.__impl.__LinkedHashMapValueProxyGenericStatementsClient, cds.__hidden.__impl.__LinkedHashMapValueProxyConstGenericStatementsClient, cds.__hidden.__impl.__LinkedHashMapValueProxyContainsOfCollectionClient, cds.__hidden.__impl.__LinkedHashMapValueProxyContainsOfInitializerListClient, cds.__hidden.__impl.__LinkedHashMapValueProxyDelegateForwardIterableClient, cds.__hidden.__impl.__LinkedHashMapValueProxyDelegateForwardConstIterableClient {
        ..base methods..
        # {method} ValueMutableCollectionProxy (LinkedHashMap *) noexcept
        + {method} ~ValueMutableCollectionProxy () noexcept
        ..required by local clients, manual dispatcher..
        - {method} __begin () noexcept -> cds::__hidden::__impl::__AbstractDelegateIterator <V> *
        - {method} __end () noexcept -> cds::__hidden::__impl::__AbstractDelegateIterator <V> *
        - {method} __cbegin () const noexcept -> cds::__hidden::__impl::__AbstractDelegateIterator <V const> *
        - {method} __cend () const noexcept -> cds::__hidden::__impl::__AbstractDelegateIterator <V const> *
        - {method} __beginLocal () noexcept -> Iterator
        - {method} __endLocal () noexcept -> Iterator
        - {method} __cbeginLocal () const noexcept -> ConstIterator
        - {method} __cendLocal () const noexcept -> ConstIterator
        - {method} __remove (Iterator const *) noexcept -> bool
        - {method} __removeConst (ConstIterator const *) noexcept -> bool
        - {method} __removeArray (Iterator const * const *, Size) noexcept -> Size
        - {method} __removeConstArray (ConstIterator const * const *, Size) noexcept -> Size
        ..other methods..
        - {method} __equals (ValueMutableCollectionProxy const &) const noexcept -> bool
        + {method} operator == (ValueMutableCollectionProxy const &) const noexcept -> bool
        + {method} operator != (ValueMutableCollectionProxy const &) const noexcept -> bool
    }

    LinkedHashMap .. "is nested in" LinkedHashMap::ValueMutableCollectionProxy

    namespace __hidden {
        namespace __impl {

            interface __MutableCollectionServer
            class __LinkedHashMapEntryProxyServer <E> << (T, #aa9999) >>
            class __LinkedHashMapEntryProxyRandomInsertionClient <E> << (T, #aa9999) >>
            class __LinkedHashMapEntryProxyIteratorRemoveClient <E> << (T, #aa9999) >>
            class __LinkedHashMapEntryProxyConstIteratorRemoveClient <E> << (T, #aa9999) >>
            class __LinkedHashMapEntryProxyFindOfCollectionClient <E> << (T, #aa9999) >>
            class __LinkedHashMapEntryProxyFindOfConstCollectionClient <E> << (T, #aa9999) >>
            class __LinkedHashMapEntryProxyFindOfInitializerListClient <E> << (T, #aa9999) >>
            class __LinkedHashMapEntryProxyFindOfConstInitializerListClient <E> << (T, #aa9999) >>
            class __LinkedHashMapEntryProxyFindByClient <E> << (T, #aa9999) >>
            class __LinkedHashMapEntryProxyConstFindByClient <E> << (T, #aa9999) >>
            class __LinkedHashMapEntryProxyRemoveOfCollectionClient <E> << (T, #aa9999) >>
            class __LinkedHashMapEntryProxyRemoveOfInitializerListClient <E> << (T, #aa9999) >>
            class __LinkedHashMapEntryProxyRemoveByClient <E> << (T, #aa9999) >>
            class __LinkedHashMapEntryProxyGenericStatementsClient <E> << (T, #aa9999) >>
            class __LinkedHashMapEntryProxyConstGenericStatementsClient <E> << (T, #aa9999) >>
            class __LinkedHashMapEntryProxyContainsOfCollectionClient <E> << (T, #aa9999) >>
            class __LinkedHashMapEntryProxyContainsOfInitializerListClient <E> << (T, #aa9999) >>
            class __LinkedHashMapEntryProxyDelegateForwardIterableClient <E> << (T, #aa9999) >>
            class __LinkedHashMapEntryProxyDelegateForwardConstIterableClient <E> << (T, #aa9999) >>

            __MutableCollectionServer ...... "is" __LinkedHashMapEntryProxyServer
            __LocalRandomInsertionPrimitiveClient ... "is" __LinkedHashMapEntryProxyRandomInsertionClient
            __LocalIteratorRemovePrimitiveClient ........ "is" __LinkedHashMapEntryProxyIteratorRemoveClient
            __LocalConstIteratorRemovePrimitiveClient ........ "is" __LinkedHashMapEntryProxyConstIteratorRemoveClient
            __LocalFindOfMutableCompositeClient ..... "is" __LinkedHashMapEntryProxyFindOfCollectionClient
            __LocalFindOfMutableCompositeClient ...... "is" __LinkedHashMapEntryProxyFindOfInitializerListClient
            __LocalFindByMutableCompositeClient ........ "is" __LinkedHashMapEntryProxyFindByClient
            __LocalFindOfImmutableCompositeClient ........ "is" __LinkedHashMapEntryProxyFindOfConstCollectionClient
            __LocalFindOfImmutableCompositeClient ...... "is" __LinkedHashMapEntryProxyFindOfConstInitializerListClient
            __LocalFindByImmutableCompositeClient ........ "is" __LinkedHashMapEntryProxyConstFindByClient
            __LocalRemoveOfCompositeClient ........ "is" __LinkedHashMapEntryProxyRemoveOfCollectionClient
            __LocalRemoveOfCompositeClient ........ "is" __LinkedHashMapEntryProxyRemoveOfInitializerListClient
            __LocalRemoveByCompositeClient ........ "is" __LinkedHashMapEntryProxyRemoveByClient
            __LocalGenericMutableStatementsCompositeClient ........ "is" __LinkedHashMapEntryProxyGenericStatementsClient
            __LocalGenericImmutableStatementsCompositeClient ....... "is" __LinkedHashMapEntryProxyConstGenericStatementsClient
            __LocalContainsOfCompositeClient ....... "is" __LinkedHashMapEntryProxyContainsOfCollectionClient
            __LocalContainsOfCompositeClient ........ "is" __LinkedHashMapEntryProxyContainsOfInitializerListClient
            __LocalDelegateForwardIterablePrimitiveClient ........ "is" __LinkedHashMapEntryProxyDelegateForwardIterableClient
            __LocalDelegateForwardConstIterablePrimitiveClient ...... "is" __LinkedHashMapEntryProxyDelegateForwardConstIterableClient

        }
    }

    class LinkedHashMap::EntryMutableCollectionProxy extends Map::AbstractEntryMutableCollectionProxy implements cds.__hidden.__impl.__LinkedHashMapEntryProxyServer, cds.__hidden.__impl.__LinkedHashMapEntryProxyRandomInsertionClient, cds.__hidden.__impl.__LinkedHashMapEntryProxyIteratorRemoveClient, cds.__hidden.__impl.__LinkedHashMapEntryProxyConstIteratorRemoveClient, cds.__hidden.__impl.__LinkedHashMapEntryProxyFindOfCollectionClient, cds.__hidden.__impl.__LinkedHashMapEntryProxyFindOfInitializerListClient, cds.__hidden.__impl.__LinkedHashMapEntryProxyFindByClient, cds.__hidden.__impl.__LinkedHashMapEntryProxyFindOfConstCollectionClient, cds.__hidden.__impl.__LinkedHashMapEntryProxyFindOfConstInitializerListClient, cds.__hidden.__impl.__LinkedHashMapEntryProxyConstFindByClient, cds.__hidden.__impl.__LinkedHashMapEntryProxyRemoveOfCollectionClient, cds.__hidden.__impl.__LinkedHashMapEntryProxyRemoveOfInitializerListClient, cds.__hidden.__impl.__LinkedHashMapEntryProxyRemoveByClient, cds.__hidden.__impl.__LinkedHashMapEntryProxyGenericStatementsClient, cds.__hidden.__impl.__LinkedHashMapEntryProxyConstGenericStatementsClient, cds.__hidden.__impl.__LinkedHashMapEntryProxyContainsOfCollectionClient, cds.__hidden.__impl.__LinkedHashMapEntryProxyContainsOfInitializerListClient, cds.__hidden.__impl.__LinkedHashMapEntryProxyDelegateForwardIterableClient, cds.__hidden.__impl.__LinkedHashMapEntryProxyDelegateForwardConstIterableClient {
        ..base methods..
        # {method} EntryMutableCollectionProxy (LinkedHashMap *) noexcept
        + {method} ~EntryMutableCollectionProxy () noexcept
        ..required by local clients, manual dispatcher..
        - {method} __begin () noexcept -> cds::__hidden::__impl::__AbstractDelegateIterator <MapEntry <K, V>> *
        - {method} __end () noexcept -> cds::__hidden::__impl::__AbstractDelegateIterator <MapEntry <K, V>> *
        - {method} __cbegin () const noexcept -> cds::__hidden::__impl::__AbstractDelegateIterator <MapEntry <K, V> const> *
        - {method} __cend () const noexcept -> cds::__hidden::__impl::__AbstractDelegateIterator <MapEntry <K, V> const> *
        - {method} __beginLocal () noexcept -> Iterator
        - {method} __endLocal () noexcept -> Iterator
        - {method} __cbeginLocal () const noexcept -> ConstIterator
        - {method} __cendLocal () const noexcept -> ConstIterator
        - {method} __remove (Iterator const *) noexcept -> bool
        - {method} __removeConst (ConstIterator const *) noexcept -> bool
        - {method} __removeArray (Iterator const * const *, Size) noexcept -> Size
        - {method} __removeConstArray (ConstIterator const * const *, Size) noexcept -> Size
        ..other methods..
        - {method} __equals (EntryMutableCollectionProxy const &) const noexcept -> bool
        + {method} operator == (EntryMutableCollectionProxy const &) const noexcept -> bool
        + {method} operator != (EntryMutableCollectionProxy const &) const noexcept -> bool
    }

    LinkedHashMap .. "is nested in" LinkedHashMap::EntryMutableCollectionProxy

}

!endif
!endsub

!startsub private
remove cds.__hidden.__impl.__BoundaryInsertionPrimitiveClient
remove cds.__hidden.__impl.__AbstractConstIteratorRelativeInsertionPrimitiveClient
remove cds.__hidden.__impl.__AbstractIteratorRelativeInsertionPrimitiveClient
remove cds.__hidden.__impl.__AbstractConstIteratorRemovePrimitiveClient
remove cds.__hidden.__impl.__AbstractIteratorRemovePrimitiveClient
remove cds.__hidden.__impl.__DelegateForwardIterablePrimitiveClient
remove cds.__hidden.__impl.__DelegateForwardConstIterablePrimitiveClient
remove cds.__hidden.__impl.__DelegateBackwardIterablePrimitiveClient
remove cds.__hidden.__impl.__DelegateBackwardConstIterablePrimitiveClient
remove cds.__hidden.__impl.__IndexedOperationsPrimitiveClient
remove cds.__hidden.__impl.__RandomInsertionPrimitiveClient
remove cds.__hidden.__impl.__List*Client*
remove *CHint*

abstract class cds.Collection extends cds.__hidden.__impl.__CollectionInternalCommunicationChannel
abstract class cds.MutableCollection extends cds.Collection

!endsub

@enduml